{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ListBar","props","maxval","Math","max","weights","map","val","className","class","style","width","title","titleleft","titleright","items","i","numcol","round","clickid","clickids","clickfun","clickclass","onClick","DocumentBox","text","this","doc","x","meta","Object","entries","key","value","React","Component","TopicContainer","handleFileUpload","e","fileReader","FileReader","readAsText","target","files","onload","setState","td","JSON","parse","result","topicstate","state","topic","topicdoc","for","id","type","onChange","topicpart","subtitle","topics","proportion","long","handleChangeTopic","bind","top_docs","top_docs_ids","docs","top_word","word_wgt","doc_perc","handleChangeTopicDoc","top_topics","top_topics_ids","short","topic_weights","handleChangeTopicstate","Viewer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5950c4d4.chunk.js","sourcesContent":["import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// ***************************************************************************\n// Helper function(s)\n\nfunction ListBar(props) {\n  var maxval = Math.max(...props.weights);\n  var weights = props.weights.map(val => {\n    return(100 * val / maxval)\n  })\n\n  return(\n    <div\n      className={\"topic-list-container\" + props.class}\n      style={{width: props.width}}>\n      <div className=\"topic-list-title\">\n        <span>{props.title}</span>\n      </div>\n      <div className=\"topic-list-row-head\">\n        <span>{props.titleleft}</span>\n        <span>{props.titleright}</span>\n      </div>\n      {props.items.map( (val, i) => {\n        var numcol = null;\n\n        if (props.numcol) {\n          numcol = (\n            <div className=\"topic-list-percent\">\n              <span>{Math.round(props.weights[i]) + \"%\"}</span>\n            </div>\n          )\n        }\n\n        var clickid = i;\n        if (props.clickids) {\n          clickid = props.clickids[i];\n        }\n\n        var clickfun = props.clickfun;\n        var clickclass = \"topic-list-row\";\n        if (!clickfun) {\n          clickfun = function() {};\n          clickclass = \"topic-list-row noclick\"\n        }\n\n        return(\n          <div\n            className={clickclass}\n            key={i}\n            onClick={() => clickfun(clickid)}\n            >\n            <div\n              className=\"topic-list-text\">\n              <span>{val}</span>\n            </div>\n            {numcol}\n            <div className=\"topic-list-size\">\n            <div\n              className=\"topic-list-inner\"\n              style={{width: weights[i] + \"%\"}}>\n            </div>\n            </div>\n          </div>\n        )\n      })}\n\n    </div>\n  )\n}\n\nclass DocumentBox extends React.Component {\n\n  render() {\n\n    let text = this.props.doc.text.map( (x) => { return(<p>{x}</p>) } );\n    let meta = Object.entries(this.props.doc.meta).map(\n      ([key, value]) => { return(<li>{key}: <span>{value}</span></li>) }\n    );\n\n    return(\n      <div className=\"topic-meta\">\n        <ul>\n          <li>Title: <span>{this.props.doc.title}</span></li>\n          {meta}\n        </ul>\n        <div className=\"doc-text\">\n          {text}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass TopicContainer extends React.Component {\n\n  // Override two standard methods of React.Component //\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      td: null,\n      topicstate: 'grid',\n      topic: 0,\n      topicdoc: 0\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleChangeTopic(topic) {\n    this.setState({\n      topic: topic,\n      topicstate: 'topic',\n    });\n  }\n\n  handleChangeTopicDoc(topicdoc) {\n    this.setState({\n      topicdoc: topicdoc,\n      topicstate: 'doc',\n    });\n  }\n\n  handleChangeTopicstate(value) {\n    this.setState({\n      topicstate: value,\n    });\n  }\n\n  handleFileUpload = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      this.setState({\n        td: JSON.parse(e.target.result),\n        topicstate: 'grid'\n      });\n    };\n  }\n\n  render() {\n\n    if (!this.state.td) {\n      return (\n        <div className={\"topic-container \"}>\n          <div className=\"topic-header\">\n            <span>Topic Model Visualizer</span>\n          </div>\n          <div className=\"file-loader\">\n            <label class=\"button\" for=\"upload\">Upload JSON File</label>\n            <input id=\"upload\" type=\"file\" onChange={this.handleFileUpload} />\n          </div>\n        </div>\n      )\n    }\n\n    var topicpart = null;\n    var subtitle = \"All Topics\";\n\n    if (this.state.topicstate === \"grid\") {\n      var weights = this.state.td.topics.map(val => {return(val.proportion)});\n\n      topicpart = (\n        <div className=\"topic-part\">\n          <ListBar\n            titleleft=\"topic\"\n            titleright=\"proportion of corpus\"\n            items={this.state.td.topics.map(val => {return(val.long)})}\n            weights={weights}\n            width=\"800px\"\n            clickfun={this.handleChangeTopic.bind(this)}\n            numcol={true}\n            class=\"\"\n          />\n        </div>\n      );\n    }\n\n    if (this.state.topicstate === \"topic\") {\n      let top_docs = this.state.td.topics[this.state.topic].top_docs_ids.map(\n        (x, i) => {\n          return(this.state.td.docs[x].title)\n        }\n      );\n\n      subtitle = this.state.td.topics[this.state.topic].long;\n\n      topicpart = (\n        <div className=\"topic-part\">\n          <div style={{width: '1200px'}}>\n          <ListBar\n            title=\"Associated Words\"\n            titleleft=\"word\"\n            titleright=\"weight\"\n            items={this.state.td.topics[this.state.topic].top_word}\n            weights={this.state.td.topics[this.state.topic].word_wgt}\n            width=\"350px\"\n            numcol={false}\n            class=\"\"\n          />\n          <ListBar\n            title=\"Associated Documents\"\n            titleleft=\"document\"\n            titleright=\"proportion in topic\"\n            items={top_docs}\n            weights={this.state.td.topics[this.state.topic].doc_perc}\n            width=\"750px\"\n            clickfun={this.handleChangeTopicDoc.bind(this)}\n            clickids={this.state.td.topics[this.state.topic].top_docs_ids}\n            numcol={true}\n            class=\" topic-list-two\"\n          />\n          </div>\n        </div>\n      );\n    }\n    if (this.state.topicstate === \"doc\") {\n      let top_topics = this.state.td.docs[this.state.topicdoc].top_topics_ids.map(\n        (x, i) => {\n          return(this.state.td.topics[x].short)\n        }\n      );\n\n      subtitle = \"Document: \"+ this.state.td.docs[this.state.topicdoc].title;\n\n      topicpart = (\n        <div>\n          <div className=\"topic-part\">\n            <ListBar\n              titleleft=\"Group\"\n              titleright=\"proportion of document\"\n              items={top_topics}\n              weights={this.state.td.docs[this.state.topicdoc].topic_weights}\n              clickfun={this.handleChangeTopic.bind(this)}\n              clickids={this.state.td.docs[this.state.topicdoc].top_topics_ids}\n              width=\"300px\"\n              numcol={true}\n              class=\"\"\n            />\n          </div>\n          <DocumentBox\n            doc={this.state.td.docs[this.state.topicdoc]}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className={\"topic-container \"}>\n        <div className=\"topic-header\">\n          <span>{subtitle}</span>\n        </div>\n        <div className=\"file-loader\">\n          <label class=\"button\" for=\"upload\">Upload JSON File</label>\n          <input id=\"upload\" type=\"file\" onChange={this.handleFileUpload} />\n        </div>\n        <div className=\"nav-top\">\n          <span onClick={() => this.handleChangeTopicstate(\"grid\")}>\n            [all topics]\n          </span>\n        </div>\n        {topicpart}\n      </div>\n    )\n  }\n}\n\n\n// ***************************************************************************\n// Main class that holds the state of the App\n\nclass Viewer extends React.Component {\n\n  render() {\n\n    return (\n      <TopicContainer/>\n    );\n  }\n}\n\n// ***************************************************************************\n// Wrap the App and return the rendered Viewer\n\nfunction App() {\n  return (\n    <Viewer />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}